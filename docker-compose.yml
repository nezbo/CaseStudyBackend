version: '3.4'

services:
  assetapi:
    image: ${DOCKER_REGISTRY-}assetapi
    restart: always
    build:
      context: .
      dockerfile: AssetAPI/Dockerfile
    environment:
      OTLP_Endpoint: http://otel-collector:4317

  invoiceapi:
    image: ${DOCKER_REGISTRY-}invoiceapi
    restart: always
    build:
      context: .
      dockerfile: InvoiceAPI/Dockerfile
    environment:
      OTLP_Endpoint: http://otel-collector:4317
      ASSET_API_URL: http://assetapi:80

  # Monitoring
  jaeger:
    image: jaegertracing/all-in-one:1.58.0
    ports:
      - "16686:16686" # Jaeger Web UI

  prometheus:
    image: prom/prometheus:v2.53.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  loki:
    image: grafana/loki:2.7.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:10.4.4
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.103.0
    volumes:
      - ./otel-collector/otel-collector-config.yml:/etc/otel/config.yaml
      - ./log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
    ports:
      - "8880:8889"     # Prometheus metrics exporter (endpoint)
      - "13133:13133"   # Health check extension
      - "5679:5679"   # ZPages extension
      - "4317:4317"     # OTLP Receiver
    depends_on:
      - jaeger
      - prometheus
      - loki